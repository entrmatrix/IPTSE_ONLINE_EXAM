@model Online_Exam_Project_Main.Models.Questions_tbl

@{
    ViewBag.Title = @ViewBag.score;
}

<br /><br /><br /><br />
<div id="clockdiv">
    <h1 style="color: red">

        <div class="minutes" style="float: left"> </div>
        <p style="float: left">:</p>
        <div class="seconds"></div>
    </h1>
</div>
<br />
<p>
    <h1 id="clock" style="color: blue">
        <div id="countdown">

        </div>
    </h1>
</p>
    <script>


        function getTimeRemaining(endtime) {
            var t = Date.parse(endtime) - Date.parse(new Date());
            var seconds = Math.floor((t / 1000) % 60);
            var minutes = Math.floor((t / 1000 / 60) % 1);

            return {
                'total': t,
                'minutes': minutes,
                'seconds': seconds
            };
        }

        function initializeClock(id, endtime) {
            var clock = document.getElementById(id);

            var minutesSpan = clock.querySelector('.minutes');
            var secondsSpan = clock.querySelector('.seconds');

            function updateClock() {
                var t = getTimeRemaining(endtime);


                minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
                secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

                if (t.total <= 0) {
                    alert(t.total);
                    clearInterval(timeinterval);
                }
            }

            updateClock();
            var timeinterval = setInterval(updateClock, 1000);
        }

        var deadline = new Date(Date.parse(new Date()) + 60 * 60 * 1000);
        initializeClock('clockdiv', deadline);

        // ...................................
        var _second = 1000;
        var _minute = _second * 60;
        var _hour = _minute * 60;
        var _day = _hour * 24;
        var timer;
        var end = new Date().getTime() + (60 * _second);
        //

        function showRemaining() {
            var now = new Date();
            var distance = end - now;
            if (distance < 15) {
                document.getElementById('clock').style.color = "red";
                document.getElementById('countdown').style.color = "red";
            }
            if (distance < 0) {

                clearInterval(timer);
                document.getElementById('countdown').innerHTML = 'TIME EXPIRED!';
                enableNext();
                disableAnswers();

                return;
            }
            var days = Math.floor(distance / _day);
            var hours = Math.floor((distance % _day) / _hour);
            var minutes = Math.floor((distance % _hour) / _minute);
            var seconds = Math.floor((distance % _minute) / _second);

            //document.getElementById('countdown').innerHTML = days + 'days ';
            //document.getElementById('countdown').innerHTML += hours + 'hrs ';
            document.getElementById('countdown').innerHTML = minutes + ':';
            document.getElementById('countdown').innerHTML += seconds;
        }

        timer = setInterval(showRemaining, 1000);

        function enableNext() {
            var nextBtn = document.getElementById('NEXT');
            nextBtn.disabled = false;
            var skipBtn = document.getElementById('SKIP');
            skipBtn.disabled = true;
        }

        function disableAnswers() {
            document.getElementById('A1').disabled = true;
            document.getElementById('A2').disabled = true;
            document.getElementById('A3').disabled = true;
            document.getElementById('A4').disabled = true;
        }
    </script>
    <div>
        @using (Html.BeginForm("NextQuestion", "ShowQuestion", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div>
                @Html.ValidationMessageFor(m => m.selectedvalue, "", new { @class = "text-danger" })
                <h4> </h4>
                <hr />
                <dl class="dl-horizontal">

                    <dt>
                        @ViewBag.questionNo

                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.qus_title)
                    </dd>
                    <dt>
                        @Html.RadioButtonFor(model => model.selectedvalue, "1", new { id="A1", onclick = "enableNext()" })
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ans1)
                    </dd>
                    <dt>
                        @Html.RadioButtonFor(model => model.selectedvalue, "2", new { id = "A2", onclick = "enableNext()" })
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ans2)
                    </dd>

                    <dt>
                        @Html.RadioButtonFor(model => model.selectedvalue, "3", new { id = "A3", onclick = "enableNext()" })
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ans3)
                    </dd>
                    <dt>
                        @Html.RadioButtonFor(model => model.selectedvalue, "4", new { id = "A4", onclick = "enableNext()" })
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.ans4)
                    </dd>
                    @Html.HiddenFor(m => m.ans1)
                    @Html.HiddenFor(m => m.ans2)
                    @Html.HiddenFor(m => m.ans3)
                    @Html.HiddenFor(m => m.ans4)
                    @Html.HiddenFor(m => m.qus_id)
                    @Html.HiddenFor(m => m.qus_title)
                    @Html.HiddenFor(m => m.exam_id)
                    @Html.HiddenFor(m => m.correct_ans)

                </dl>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="SKIP" type="submit" value="SKIP" class="btn btn-danger" />
                    <input id="NEXT" disabled="disabled" type="submit" value="NEXT" class="btn btn-danger" />
                </div>
            </div>


        }
    </div>
